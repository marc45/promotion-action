typedef struct dictht {
    //哈希表数组
    dictEntry **table;
    //哈希表大小
    unsigned long size;
    //哈希表大小掩码，用于计算索引值，等于size - 1
    unsigned long sizemask;
    //哈希表已有的结点数量
    unsigned long used;
} dictht



typedef struct dictEntry {
    //键
    void *key;
    //值
    union {
        void *val;
        unit64_tu64;
        int64_ts64;
    } v;
    //指向下个哈希表节点，形成链表
    struct dictEntry *next;
} dictEntry;


typedef struct dict {
    //类型特定函数
    dictType * type;
    //私有数据
    void * privadata;
    //哈希表
    dictht ht[2];
    //rehash索引，当rehash不再进行时，值为 -1
    in trehashidx;
} dict;


typedef struct dictType {
    //计算哈希值的函数
    unsigned int (*hashFunction) (const void *key);
} dictType;