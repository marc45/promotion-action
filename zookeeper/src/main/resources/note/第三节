一.zookeeper中的角色
    1.领导者(leader)，负责进行投票的发起和决议，更新系统状态
    2.学习者(learner)，包括跟随者(follower)和观察者(observer)，follower用于接受客户端请求并
向客户端返回结果，在选举过程中参与投票
    3.observer可以接受客户端连接，将写请求转发给leader，但observer不参加投票过程，只同步leader
状态，observer的目的是为了扩展系统，提高读取速度
    4.客户端(client)，请求发起方


二.zookeeper核心
    1.zookeeper的核心是原子广播，这个机制保证了各个server之前的同步，实现了这个机制的协议叫做Zab协议。
Zab协议有两种模式，他们分别是恢复模式(选举)和广播模式(同步)。当服务器启动或者在领导者奔溃后，Zab就进入
了恢复模式，当领导者被选举出来，且大多数server完成了和leader的状态同步以后，恢复模式就结束了。状态同步
保证了leader和server具有相同的系统状态。

    2.为了保证事务顺序一致性，zookeeper采用了递增的事务id号(zxid)来标识事务。所有的提议(proposal)都在被提出的时候
加上zxid。实现中zxid是一个64位的数字，它高32位是epoch用来标识leader关系是否改变，每次一个leader被选出来，他都会有一
个新的epoch，标识当前属于那个leader的统治时期。低32位用于递增计数

    3.每个server在工作过程中都有三种状态：
        a.looking：当前server不知道leader是谁，在搜索
        b.leading：当前server即为选出来的leader
        c.following：leader已经选举出来了，当前server与之同步

三.半数通过，所以搭建集群一般都是搭奇数台(容错；防止脑裂，5台机器即：3和2，1和4)
    3台机器挂一台， 2 > 3/2
    4台机器挂一台， 2 !> 4/2

    更新操作要保证超过半数的都是成功的

四、Follower的主要功能
    1.向Leader发送请求(ping消息，request消息，ack消息，revalidated消息)
    2.接受Leader消息并进行处理
    3.接受Client请求，如果为写请求，发送给Leader投票
    4.返回Client结果

    Follower的消息循环处理如下接种来自Leader的消息
    1.ping消息：心跳消息
    2.proposal消息：Leader发起提案，要求Follower投票
    3.commit消息：服务端最新一次提案信息
    4.uptodate消息：表明同步完成
    5.revalidate消息：根据Leader的revalidate结果，关闭revalidate的session，还是运行接受消息
    6.sync消息：返回sync结果到客户端，这个消息最初由客户端发起，用来强制得到最新更新

